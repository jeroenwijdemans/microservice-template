group "com.wijdemans"
version "1.0.4"

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
        classpath 'org.owasp:dependency-check-gradle:1.4.4'
    }
}

apply plugin: "org.owasp.dependencycheck"
apply plugin: "java"
apply plugin: "groovy"
apply plugin: "eu.appsatori.fatjar"


compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.verbose = false
}

repositories {
    mavenLocal()
}

repositories {
    mavenCentral()
}

dependencyCheck {
    autoUpdate = false
    cveValidForHours = 4
    failBuildOnCVSS = 1
    format = "XML"
}

fatJar {
    manifest {
        attributes "Main-Class": "com.wijdemans.Main"
    }
}

ext {
    versions = [:]
    libraries = [:]
}

versions += [
        slf4j  : "1.7.18",
        logback: "1.1.2",
        groovy : "2.4.6",
        swagger: "1.5.10",
        jersey : "2.23.2",
        jackson: "2.8.4",
]

libraries.logging = [
        "org.slf4j:log4j-over-slf4j:$versions.slf4j",
        "org.slf4j:jcl-over-slf4j:$versions.slf4j",
        "com.cwbase:logback-redis-appender:1.1.5",
        "ch.qos.logback:logback-core:$versions.logback",
        "ch.qos.logback:logback-classic:$versions.logback",
]

libraries.testframework = [
        "org.spockframework:spock-core:$versions.spock",
        "org.codehaus.groovy:groovy:$versions.groovy",

        "org.objenesis:objenesis:2.0",
        "cglib:cglib-nodep:2.2"
]

configurations {
    compile.exclude group: "javax.ws.rs:jsr311-api:1.1.1"
}

dependencies {
    compile libraries.logging

    compile "com.wijdemans:valueobjects:0.1.1"

    compile "org.mongodb:mongo-java-driver:3.2.2"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}"

    compile "io.prometheus:simpleclient:0.0.14"
    compile "io.prometheus:simpleclient_servlet:0.0.14"
    compile "io.prometheus:simpleclient_hotspot:0.0.14"

    compile "com.googlecode.json-simple:json-simple:1.1.1"

    compile "org.glassfish.jersey.core:jersey-client:${versions.jersey}"
    compile "org.glassfish.jersey.core:jersey-server:${versions.jersey}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:${versions.jersey}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${versions.jersey}"
    compile "org.eclipse.jetty:jetty-servlet:9.3.12.v20160915" // same version as used by 2.22.2
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${versions.jersey}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${versions.jersey}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}"
    compile "org.glassfish.jersey.security:oauth2-client:${versions.jersey}"

    compile "org.json:json:20160810"

    compile "org.apache.kafka:kafka-clients:0.10.0.1"

    compile "org.neo4j.driver:neo4j-java-driver:1.0.5"

    // specially including updated version because swagger 1.5.10 is using a very old jackson version
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${versions.jackson}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${versions.jackson}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${versions.jackson}"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:${versions.jackson}"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${versions.jackson}"
    compile("io.swagger:swagger-jersey2-jaxrs:${versions.swagger}")

    // provide http injection
    compile group: "javax.servlet", name: "javax.servlet-api", version: "3.1.0"

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile libraries.testframework

}

task(run, dependsOn: "classes", type: JavaExec) {
    environment "PROPERTIES_LOCATION", file("./properties").absolutePath
    main = "com.wijdemans.Main"
    classpath = sourceSets.main.runtimeClasspath
}

task version << {
    println version
}

task copyDockerResources(type: Copy) {
    from "cd/"
    into "build/libs"
    include "Dockerfile"
}

